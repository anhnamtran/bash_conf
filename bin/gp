#!/bin/bash

options="connect|disconnect|dns|show|notify|help|fix"

run_gp() {
  timeout --foreground --preserve-status -k 30s 15s /usr/bin/globalprotect "$@"
}

gp_connect() {
  HELP='Connect to gp-nst.arista.com with andrew_nt'
  run_gp connect "$@"
}

gp_disconnect() {
  HELP='Disconnect from ${GP}'
  run_gp disconnect
}

gp_show() {
  HELP='Show the current VPN status'
  run_gp show "$@"
}

gp_notify() {
  HELP='Trigger a notification on the status of GlobalProtect'
  gp_show --status | xargs -I{} notify-send --urgency normal {}
}

gp_fix() {
  HELP='Fix an issue where PanGPA start gets spawned twice'
  local panGPA_procs=$(pgrep PanGPA)
  if [[ -z $panGPA_procs ]]; then
    /opt/paloaltonetworks/globalprotect/PanGPA start &
    panGPA_procs=$(ps aux | grep PanGPA | grep -v grep)
    disown $(echo "$panGPA_procs" | awk '{ print $2 }')
    echo "Started PanGPA process $panGPA_procs"
    return 0
  fi
  echo "Killing PanGPA procs"
  killall -w -s 9 PanGPA

  echo -n "Waiting for PanGPA proccess to start."
  while ! pgrep PanGPA > /dev/null 2>&1; do
    echo -n .
    sleep 1
  done
  panGPA_procs=$(ps aux | grep PanGPA | grep -v grep)
  # disown $(echo "$panGPA_procs" | awk '{ print $2 }') > /dev/null 2>&1
  echo " Restarted PanGPA process"
  echo "$panGPA_procs"
}

gp_dns() {
  HELP='Update systemd-resolve with the correct dns domains'
  sudo systemd-resolve -i gpd0 \
    --set-domain aristanetworks.com \
    --set-domain sjc.aristanetworks.com \
    --set-domain dm1tac.aristanetworks.com \
    --set-domain yvr.aristanetworks.com \
    --set-domain blr.aristanetworks.com \
    --set-domain rtp.aristanetworks.com \
    --set-domain nh.aristanetworks.com \
    --set-domain ire.aristanetworks.com \
    --set-domain syd.aristanetworks.com \
    --set-domain metamako.com \
    --set-domain arista.io \
    --set-domain bigswitch.com
}

gp_help() {
  HELP='Prints this help'
  fmt="%-5s%-12s%-25s\n"
  echo "Usage: gp {$options}"
  IFS='|'
  for opt in $options; do
    local def=$(type gp_$opt | grep -m 1 "HELP" | sed "s/HELP='\(.*\)'.*/\1/g")
    printf "$fmt" " " "$opt" "$def"
  done
}

cmd="$1"
shift 1
if [[ -n $cmd ]] && [[ $options =~ $cmd ]]; then
  gp_"$cmd" "$@"
else
  gp_help
fi
