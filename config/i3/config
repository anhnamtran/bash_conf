set $mod Mod4

hide_edge_borders smart
focus_follows_mouse no
mouse_warping none
default_border pixel
default_floating_border pixel

# Colors
# class                 border  backgr. text    indicator child_border
client.focused          #8826a5 #282C34 #ffffff #8826a5   #8826a5

floating_minimum_size 500 x 500

bindsym $mod+0 border none
bindsym $mod+p border pixel 2
bindsym $mod+n border normal

font xft:Iosevka 12

floating_modifier $mod

bindsym $mod+Return exec terminator -e tmux
bindsym $mod+Shift+t exec terminator

# Move mouse to bottom right corner
bindsym $mod+Escape exec --no-startup-id xdotool mousemove_relative -sync -- 5000 5000

# Window kill command
bindsym $mod+Shift+q kill

# start program launcher
bindsym $mod+space exec --no-startup-id /home/andrew_nt/bin/rofi_wrapper -show run -monitor -1
bindsym $mod+Shift+w exec --no-startup-id /home/andrew_nt/bin/rofi_wrapper -show window -monitor -1

# change focus
bindsym $mod+l focus right
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+h focus left

bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Ctrl+l move right
bindsym $mod+Ctrl+j move down
bindsym $mod+Ctrl+k move up
bindsym $mod+Ctrl+h move left

bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# workspace back and forth (with/without active container)
workspace_auto_back_and_forth yes
bindsym $mod+b workspace back_and_forth
bindsym $mod+Shift+b move container to workspace back_and_forth; workspace back_and_forth

# split orientation
bindsym $mod+minus split v;exec notify-send -t 2000 'tile vertically'
bindsym $mod+backslash split h;exec notify-send -t 2000 'tile horizontally'
bindsym $mod+q split toggle

# toggle fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+t layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+Ctrl+space focus mode_toggle

# toggle sticky
bindsym $mod+Shift+s sticky toggle

# focus the parent container
bindsym $mod+a focus parent

# move the currently focused window to the scratchpad
bindsym $mod+Shift+minus move scratchpad

# Show the next scratchpad window or hide the focused scratchpad window.
# If there are multiple scratchpad windows, this command cycles through them.
bindsym $mod+Ctrl+minus scratchpad show
bindsym $mod+m [class="Spotify.*"] scratchpad show
bindsym $mod+c [title="Meet.*"] scratchpad show
bindsym $mod+o [class=".*Todoist$"] scratchpad show

# navigate workspaces next / previous
bindsym $mod+Shift+l workspace next
bindsym $mod+Shift+h workspace prev

# workspaces
set $ws1 1
set $ws2 2
set $ws3 3
set $ws4 4
set $ws5 5
set $ws6 6
set $ws7 7
set $ws8 8

# switch to workspace
bindsym $mod+1 workspace $ws1
bindsym $mod+2 workspace $ws2
bindsym $mod+3 workspace $ws3
bindsym $mod+4 workspace $ws4
bindsym $mod+5 workspace $ws5
bindsym $mod+6 workspace $ws6
bindsym $mod+7 workspace $ws7
bindsym $mod+8 workspace $ws8

# Move focused container to workspace
bindsym $mod+Ctrl+1 move container to workspace $ws1
bindsym $mod+Ctrl+2 move container to workspace $ws2
bindsym $mod+Ctrl+3 move container to workspace $ws3
bindsym $mod+Ctrl+4 move container to workspace $ws4
bindsym $mod+Ctrl+5 move container to workspace $ws5
bindsym $mod+Ctrl+6 move container to workspace $ws6
bindsym $mod+Ctrl+7 move container to workspace $ws7
bindsym $mod+Ctrl+8 move container to workspace $ws8

# Move to workspace with focused container
bindsym $mod+Shift+1 move container to workspace $ws1; workspace $ws1
bindsym $mod+Shift+2 move container to workspace $ws2; workspace $ws2
bindsym $mod+Shift+3 move container to workspace $ws3; workspace $ws3
bindsym $mod+Shift+4 move container to workspace $ws4; workspace $ws4
bindsym $mod+Shift+5 move container to workspace $ws5; workspace $ws5
bindsym $mod+Shift+6 move container to workspace $ws6; workspace $ws6
bindsym $mod+Shift+7 move container to workspace $ws7; workspace $ws7
bindsym $mod+Shift+8 move container to workspace $ws8; workspace $ws8

# Open specific applications in floating mode
for_window [title="File Transfer*"] floating enable
for_window [class="Nitrogen"] floating enable sticky enable
for_window [class="(?i)System-config-printer.py"] floating enable
for_window [class="(?i)virtualbox"] floating enable border normal
for_window [class="Xfburn"] floating enable
for_window [class="(?i)firefox" instance="^(?!Navigator$)"] floating enable

for_window [class="(?i)Firefox.*" title="Meet.*"] sticky enable
for_window [title=".*Todoist$"] floating enable sticky enable

# switch to workspace with urgent window automatically
for_window [urgent=latest] focus

# reload the configuration file
bindsym $mod+Shift+c reload

# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart

# Resize window (you can also use the mouse for that)
bindsym $mod+r mode "resize"
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode
        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym l resize grow width 5 px or 1 ppt
        bindsym j resize grow height 5 px or 1 ppt
        bindsym k resize shrink height 5 px or 1 ppt
        bindsym h resize shrink width 5 px or 1 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # exit resize mode: Enter or Escape
        bindsym Return mode "default"
        bindsym Escape mode "default"
}

# Autostart applications
exec --no-startup-id ibus-daemon --xim -d
exec --no-startup-id dunst
exec --no-startup-id redshift
exec --no-startup-id nm-applet
exec --no-startup-id autorandr --change
exec --no-startup-id xautolock -resetsaver -detectsleep -notify 30 -notifier "notify-send -t 10000 'Locking screen in 30 seconds'" -corners 0-0- -cornersize 20 -time 10 -locker $HOME/bin/lock
exec_always --no-startup-id $HOME/.config/polybar/launcher.sh
exec_always --no-startup-id nitrogen --restore

# Touchpad settings
exec_always --no-startup-id /home/andrew_nt/bin/xinput_config 1

# Gaps
gaps inner 5
gaps outer 0

smart_gaps on

# Press $mod+Shift+g to enter the gap mode. Choose o or i for modifying outer/inner gaps. Press one of + / - (in-/decrement for current workspace) or 0 (remove gaps for current workspace). If you also press Shift with these keys, the change will be global for all workspaces.
set $mode_gaps Gaps: (o) outer, (i) inner
set $mode_gaps_outer Outer Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_inner Inner Gaps: +|-|0 (local), Shift + +|-|0 (global)
bindsym $mod+Shift+g mode "$mode_gaps"

mode "$mode_gaps" {
        bindsym o      mode "$mode_gaps_outer"
        bindsym i      mode "$mode_gaps_inner"
        bindsym Return mode "default"
        bindsym Escape mode "default"
}
mode "$mode_gaps_inner" {
        bindsym plus  gaps inner current plus 5
        bindsym minus gaps inner current minus 5
        bindsym 0     gaps inner current set 0

        bindsym Shift+plus  gaps inner all plus 5
        bindsym Shift+minus gaps inner all minus 5
        bindsym Shift+0     gaps inner all set 0

        bindsym Return mode "default"
        bindsym Escape mode "default"
}
mode "$mode_gaps_outer" {
        bindsym plus  gaps outer current plus 5
        bindsym minus gaps outer current minus 5
        bindsym 0     gaps outer current set 0

        bindsym Shift+plus  gaps outer all plus 5
        bindsym Shift+minus gaps outer all minus 5
        bindsym Shift+0     gaps outer all set 0

        bindsym Return mode "default"
        bindsym Escape mode "default"
}

# Spotify bindings, require https://gist.github.com/streetturtle/fa6258f3ff7b17747ee3
bindsym $mod+shift+period exec --no-startup-id [ -e $HOME/bin/sp ] && $HOME/bin/sp next
bindsym $mod+shift+comma exec --no-startup-id [ -e $HOME/bin/sp ] && $HOME/bin/sp prev
bindsym $mod+period exec --no-startup-id [ -e $HOME/bin/sp ] && $HOME/bin/sp play

bindsym XF86AudioRaiseVolume exec --no-startup-id amixer -c 0 -q set Master 2dB+ unmute
bindsym XF86AudioLowerVolume exec --no-startup-id amixer -c 0 -q set Master 2db- unmute
bindsym XF86AudioMute exec --no-startup-id /home/andrew_nt/bin/amixer_mute_toggle

bindsym XF86MonBrightnessUp exec --no-startup-id light -A 5    # increase brightness
bindsym XF86MonBrightnessDown exec --no-startup-id light -U 5  # decrease brightness

# touchpad on and off controller on laptop with Fn+<touchpad control functional key>
bindsym XF86TouchpadOn exec --no-startup-id synclient Touchpadoff=0
bindsym XF86TouchpadOff exec --no-startup-id synclient Touchpadoff=1
